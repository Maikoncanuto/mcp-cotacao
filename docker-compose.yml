version: '3.7'

services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: quote-tracing
    restart: always
    networks:
      - quote_networking
    volumes:
      - 'quote_tracing_data:/data/jaeger'
    ports:
      - '6831:6831/udp'
      - '8180:16686'
    expose:
      - '6831'

  prometheus:
    image: prom/prometheus:latest
    container_name: quote-prometheus
    restart: always
    networks:
      - quote_networking
    volumes:
      - 'quote_prometheus_data:/data/prometheus'
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
    ports:
      - '8280:9090'
    expose:
      - '9090'
      - '8080'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.2
    container_name: quote-elasticsearch
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
    networks:
      - quote_networking

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.8.2
    container_name: quote-logstash
    volumes:
      - source: ./pipelines
        target: /usr/share/logstash/pipeline
        type: bind
    ports:
      - '12201:12201/udp'
      - '5000:5000'
      - '9600:9600'
    networks:
      - quote_networking
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.8.2
    container_name: quote-kibana
    ports:
      - '8380:5601'
    networks:
      - quote_networking
    depends_on:
      - elasticsearch

volumes:
  quote_tracing_data:
    driver: local
  quote_prometheus_data:
    driver: local

networks:
  quote_networking:
    driver: bridge
