version: '3.7'

services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: quote-tracing
    restart: always
    networks:
      - quote_networking
    volumes:
      - 'quote_tracing_data:/data/jaeger'
    ports:
      - '6831:6831/udp'
      - '8180:16686'
    expose:
      - '6831'
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M

  prometheus:
    image: prom/prometheus:latest
    container_name: quote-prometheus
    restart: always
    networks:
      - quote_networking
    volumes:
      - 'quote_prometheus_data:/data/prometheus'
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
    ports:
      - '8280:9090'
    expose:
      - '9090'
      - '8080'
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.2
    container_name: quote-elasticsearch
    restart: always
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
    networks:
      - quote_networking
    deploy:
      resources:
        limits:
          memory: 710M
        reservations:
          memory: 300M

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.8.2
    container_name: quote-logstash
    restart: always
    volumes:
      - source: ./pipelines
        target: /usr/share/logstash/pipeline
        type: bind
    ports:
      - '12201:12201/udp'
      - '5000:5000'
      - '9600:9600'
    networks:
      - quote_networking
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: 800M
        reservations:
          memory: 100M

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.8.2
    container_name: quote-kibana
    restart: always
    ports:
      - '8380:5601'
    networks:
      - quote_networking
    depends_on:
      - elasticsearch
      - logstash
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M

  grafana:
    image: 'grafana/grafana'
    container_name: quote-grafana
    restart: always
    networks:
      - quote_networking
    ports:
      - '8480:3000'
    expose:
      - '3000'
    depends_on:
      - kibana
    volumes:
      - 'quote_grafana_data:/data/grafana'
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M

volumes:
  quote_tracing_data:
    driver: local
  quote_prometheus_data:
    driver: local
  quote_grafana_data:
    driver: local

networks:
  quote_networking:
    driver: bridge
